/*
* Copyright 2016 Comcast Cable Communications Management, LLC
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
* http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
 */

// This file was generated by counterfeiter
package fakes

import (
	"sync"

	"code.cloudfoundry.org/cli/plugin"
	"github.com/comcast/cf-zdd-plugin/util"
)

type FakeUtilities struct {
	GetDefaultDomainStub        func(plugin.CliConnection) string
	getDefaultDomainMutex       sync.RWMutex
	getDefaultDomainArgsForCall []struct {
		arg1 plugin.CliConnection
	}
	getDefaultDomainReturns struct {
		result1 string
	}
	invocations      map[string][][]interface{}
	invocationsMutex sync.RWMutex
}

func (fake *FakeUtilities) GetDefaultDomain(arg1 plugin.CliConnection) string {
	fake.getDefaultDomainMutex.Lock()
	fake.getDefaultDomainArgsForCall = append(fake.getDefaultDomainArgsForCall, struct {
		arg1 plugin.CliConnection
	}{arg1})
	fake.recordInvocation("GetDefaultDomain", []interface{}{arg1})
	fake.getDefaultDomainMutex.Unlock()
	if fake.GetDefaultDomainStub != nil {
		return fake.GetDefaultDomainStub(arg1)
	} else {
		return fake.getDefaultDomainReturns.result1
	}
}

func (fake *FakeUtilities) GetDefaultDomainCallCount() int {
	fake.getDefaultDomainMutex.RLock()
	defer fake.getDefaultDomainMutex.RUnlock()
	return len(fake.getDefaultDomainArgsForCall)
}

func (fake *FakeUtilities) GetDefaultDomainArgsForCall(i int) plugin.CliConnection {
	fake.getDefaultDomainMutex.RLock()
	defer fake.getDefaultDomainMutex.RUnlock()
	return fake.getDefaultDomainArgsForCall[i].arg1
}

func (fake *FakeUtilities) GetDefaultDomainReturns(result1 string) {
	fake.GetDefaultDomainStub = nil
	fake.getDefaultDomainReturns = struct {
		result1 string
	}{result1}
}

func (fake *FakeUtilities) Invocations() map[string][][]interface{} {
	fake.invocationsMutex.RLock()
	defer fake.invocationsMutex.RUnlock()
	fake.getDefaultDomainMutex.RLock()
	defer fake.getDefaultDomainMutex.RUnlock()
	return fake.invocations
}

func (fake *FakeUtilities) recordInvocation(key string, args []interface{}) {
	fake.invocationsMutex.Lock()
	defer fake.invocationsMutex.Unlock()
	if fake.invocations == nil {
		fake.invocations = map[string][][]interface{}{}
	}
	if fake.invocations[key] == nil {
		fake.invocations[key] = [][]interface{}{}
	}
	fake.invocations[key] = append(fake.invocations[key], args)
}

var _ util.Utilities = new(FakeUtilities)
